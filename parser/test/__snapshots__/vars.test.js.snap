// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Variables Boolean primitive Assignment 1`] = `
ParseNode {
  "kind": "assign",
  "left": ParseNode {
    "kind": "identifier",
    "name": "myBool",
  },
  "operator": "=",
  "right": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "bool",
    },
    "value": true,
  },
}
`;

exports[`Variables Boolean primitive Declaration 1`] = `
ParseNode {
  "identifier": "myBool",
  "kind": "let",
  "value": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "bool",
    },
    "value": false,
  },
}
`;

exports[`Variables Floating point primitive Assignment 1`] = `
ParseNode {
  "kind": "assign",
  "left": ParseNode {
    "kind": "identifier",
    "name": "myFloat",
  },
  "operator": "=",
  "right": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "float",
    },
    "value": 2.71828183,
  },
}
`;

exports[`Variables Floating point primitive Declaration 1`] = `
ParseNode {
  "identifier": "myFloat",
  "kind": "let",
  "value": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "float",
    },
    "value": 3.14159,
  },
}
`;

exports[`Variables Function Declaration 1`] = `
ParseNode {
  "identifier": "myFn",
  "kind": "let",
  "value": ParseNode {
    "body": Array [
      ParseNode {
        "kind": "return",
        "value": ParseNode {
          "kind": "literal",
          "type": ParseNode {
            "kind": "type",
            "origin": "builtin",
            "type": "str",
          },
          "value": "abc",
        },
      },
    ],
    "kind": "literal",
    "parameters": Array [
      Object {
        "name": "a",
        "type": ParseNode {
          "kind": "type",
          "origin": "builtin",
          "type": "int",
        },
      },
    ],
    "returns": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "str",
    },
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "parameters": Array [
        ParseNode {
          "kind": "type",
          "origin": "builtin",
          "type": "int",
        },
      ],
      "returns": ParseNode {
        "kind": "type",
        "origin": "builtin",
        "type": "str",
      },
      "type": "fn",
    },
  },
}
`;

exports[`Variables Integer primitive Assignment 1`] = `
ParseNode {
  "kind": "assign",
  "left": ParseNode {
    "kind": "identifier",
    "name": "myInt",
  },
  "operator": "=",
  "right": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "int",
    },
    "value": 3,
  },
}
`;

exports[`Variables Integer primitive Declaration 1`] = `
ParseNode {
  "identifier": "myInt",
  "kind": "let",
  "value": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "int",
    },
    "value": 99,
  },
}
`;

exports[`Variables String Assignment 1`] = `
ParseNode {
  "kind": "assign",
  "left": ParseNode {
    "kind": "identifier",
    "name": "myStr",
  },
  "operator": "=",
  "right": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "str",
    },
    "value": "world",
  },
}
`;

exports[`Variables String Declaration 1`] = `
ParseNode {
  "identifier": "myStr",
  "kind": "let",
  "value": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "str",
    },
    "value": "hello",
  },
}
`;

exports[`Variables null Declaration 1`] = `
ParseNode {
  "identifier": "myNull",
  "kind": "let",
  "value": ParseNode {
    "kind": "literal",
    "type": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "null",
    },
    "value": null,
  },
}
`;

exports[`Variables null Read 1`] = `
ParseNode {
  "kind": "identifier",
  "name": "myNull",
}
`;

exports[`Variables using 'new' bool 1`] = `
ParseNode {
  "identifier": "myNewBool",
  "kind": "let",
  "value": ParseNode {
    "kind": "new",
    "target": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "bool",
    },
  },
}
`;

exports[`Variables using 'new' float 1`] = `
ParseNode {
  "identifier": "myNewFloat",
  "kind": "let",
  "value": ParseNode {
    "kind": "new",
    "target": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "float",
    },
  },
}
`;

exports[`Variables using 'new' fn 1`] = `
ParseNode {
  "identifier": "myFn",
  "kind": "let",
  "value": ParseNode {
    "kind": "new",
    "target": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "parameters": Array [],
      "returns": ParseNode {
        "kind": "type",
        "origin": "builtin",
        "type": "null",
      },
      "type": "fn",
    },
  },
}
`;

exports[`Variables using 'new' int 1`] = `
ParseNode {
  "identifier": "myNewInt",
  "kind": "let",
  "value": ParseNode {
    "kind": "new",
    "target": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "int",
    },
  },
}
`;

exports[`Variables using 'new' str 1`] = `
ParseNode {
  "identifier": "myNewStr",
  "kind": "let",
  "value": ParseNode {
    "kind": "new",
    "target": ParseNode {
      "kind": "type",
      "origin": "builtin",
      "type": "str",
    },
  },
}
`;
